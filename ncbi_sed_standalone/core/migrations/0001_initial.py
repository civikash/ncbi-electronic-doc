# Generated by Django 5.1.3 on 2024-11-27 16:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Отдел')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделение',
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='Полное наименование организации')),
                ('short_name', models.CharField(max_length=45, verbose_name='Сокращенное наименование организации')),
                ('inn', models.CharField(max_length=10, verbose_name='ИНН')),
                ('ogrn', models.CharField(max_length=13, verbose_name='ОГРН')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Должность')),
            ],
        ),
        migrations.CreateModel(
            name='TypeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='Наименование')),
                ('description', models.CharField(max_length=195, verbose_name='Описание раздела')),
                ('type', models.CharField(choices=[('INCOMING_DOCUMENT', 'Входящий документ'), ('OUTGOING_DOCUMENT', 'Исходящий документ'), ('ORD', 'ОРД'), ('INTERNAL_DOCUMENT', 'Внутренний документ'), ('CONTRACTS', 'Договоры'), ('DPO_DOCUMENTS', 'Документы ДПО')], max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('groups', models.ManyToManyField(blank=True, related_name='user_groups', to='auth.group', verbose_name='Группы')),
                ('permissions', models.ManyToManyField(blank=True, related_name='user_permissions', to='auth.permission', verbose_name='Права пользователя')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.department', verbose_name='Отдел')),
                ('organisation', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.organisation', verbose_name='Организация')),
                ('post', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.post', verbose_name='Должность')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Учетная запись')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('brief', models.CharField(max_length=250, null=True, verbose_name='Краткое описание')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
                ('note', models.TextField(verbose_name='Примечание')),
                ('addressee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_addressee', to='core.staff', verbose_name='Адресат')),
                ('author_work_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.staff', verbose_name='Автор РК')),
                ('readers', models.ManyToManyField(related_name='document_readers', to='core.staff', verbose_name='Читатели')),
                ('signatory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_signatory', to='core.staff', verbose_name='Подписант')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.typedocument', verbose_name='Тип документа')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
    ]
